<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Github on ZYF.IM BLOG</title>
    <link>https://zyf.im/tags/github/</link>
    <description>Recent content in Github on ZYF.IM BLOG</description>
    <generator>Hugo -- 0.147.2</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Jul 2016 20:00:00 +0000</lastBuildDate>
    <atom:link href="https://zyf.im/tags/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitHub Webhook 自动部署 Hexo</title>
      <link>https://zyf.im/2016/07/01/github-webhook-example/</link>
      <pubDate>Fri, 01 Jul 2016 20:00:00 +0000</pubDate>
      <guid>https://zyf.im/2016/07/01/github-webhook-example/</guid>
      <description>&lt;p&gt;在 &lt;a href=&#34;https://zyf.im/2016/06/30/github-pages-forbidden-baiduspide-solution/&#34;&gt;GitHub Pages 不被百度收录解决方案&lt;/a&gt; 中，思路二是通过 Dnspod 的智能 DNS 服务。简而言之就是搭建一个 Server，做一个 Blog 的镜像站，专为百度收录使用。&lt;/p&gt;
&lt;p&gt;但是每次将新建的博客文章 &lt;code&gt;PUSH&lt;/code&gt; 到 GitHub 后，还要再登陆 Server &lt;code&gt;PULL&lt;/code&gt; 一下，简直是太蠢了。那有什么解决办法吗？答：GitHub Webhook。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id=&#34;webhook&#34;&gt;Webhook&lt;/h2&gt;
&lt;p&gt;Webhook，也就是人们常说的钩子，是一个很有用的工具。你可以通过定制 Webhook 来监测你在 Github.com 上的各种事件，最常见的莫过于 push 事件。&lt;/p&gt;
&lt;p&gt;如果你设置了一个监测 push 事件的 Webhook，那么每当你的这个项目有了任何提交，这个 Webhook 都会被触发，这时 Github 就会发送一个 HTTP POST 请求到你配置好的地址。&lt;/p&gt;
&lt;p&gt;如此一来，你就可以通过这种方式去自动完成一些重复性工作；比如，你可以用 Webhook 来自动触发一些持续集成（CI）工具的运作，比如 Travis CI；又或者是通过 Webhook 去部署你的线上服务器。&lt;/p&gt;
&lt;p&gt;Github 开发者平台的文档中对 Webhook 的所能做的事是这样描述的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You’re only limited by your imagination.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;响应-webhook&#34;&gt;响应 Webhook&lt;/h2&gt;
&lt;p&gt;在参考文章里博主是使用 Node.js 编写的服务端响应代码，但考虑到自己对 Node.js 不熟悉，还要部署环境，所以改用 Python 语言编写响应代码。&lt;/p&gt;
&lt;p&gt;自己在 GitHub 搜索下 &lt;code&gt;github webhook&lt;/code&gt;，&lt;code&gt;language&lt;/code&gt; 选择 &lt;code&gt;Python&lt;/code&gt; 便找到了 Python 编写的：&lt;a href=&#34;https://github.com/razius/github-webhook-handler&#34;&gt;razius/github-webhook-handler&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>GitHub Pages 不被百度收录解决方案</title>
      <link>https://zyf.im/2016/06/30/github-pages-forbidden-baiduspide-solution/</link>
      <pubDate>Thu, 30 Jun 2016 20:00:00 +0000</pubDate>
      <guid>https://zyf.im/2016/06/30/github-pages-forbidden-baiduspide-solution/</guid>
      <description>&lt;p&gt;2019-12-02 更新：现在我的 Blog 还是用的 GitHub Pages，反正没有备案的域名不会被百度收录。&lt;/p&gt;
&lt;p&gt;2017-04-22 更新：现在我的 Blog 使用的是 &lt;a href=&#34;https://www.ufovps.com/&#34;&gt;UFOVPS&lt;/a&gt; 直接部署的。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在 &lt;a href=&#34;https://zyf.im/2016/06/24/hexo-github-blog/&#34;&gt;使用 Hexo 和 Github 搭建个人独立博客&lt;/a&gt; 几天后，发现百度并不对博客进行收录。&lt;/p&gt;
&lt;p&gt;在天朝使用百度搜索毕竟多数，使用百度站长工具-抓取诊断，在百度 Spider 抓取结果返回 HTTP 头：HTTP/1.1 403 Forbidden，原来是 GitHub 禁止了百度爬虫的爬去。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;Google 后早已有许多热心网友给出了解决方案，自己在这里总结下。&lt;/p&gt;
&lt;h2 id=&#34;思路一利用-cdn-解决百度爬虫被-github-pages-拒绝的问题&#34;&gt;思路一：利用 CDN 解决百度爬虫被 Github Pages 拒绝的问题&lt;/h2&gt;
&lt;h3 id=&#34;解决思路&#34;&gt;解决思路&lt;/h3&gt;
&lt;p&gt;既然 Github 彻底和百度决裂了，那我们也只能自己动手来解决了。Github 可能是封了百度的 IP，也有可能是封了百度爬虫的 User-Agent。&lt;/p&gt;
&lt;p&gt;所以要解决这个问题，最好就不要让百度爬虫直接访问 Github 了，需要在中间套一层 &lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86&#34;&gt;反向代理&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;那么问题又来了，既然我可以搭一个反向代理服务器了，那我为什么不直接把博客放在这台服务器上？放 Github Pages 上不就是为了少一台服务器，少一点费用吗？&lt;/p&gt;
&lt;p&gt;那有没有免费的第三方反向代理服务呢？当然有，其实现在各种 &lt;strong&gt;CDN 服务&lt;/strong&gt; 不就是吗？而且还额外提供了各种网络环境下的加速功能。&lt;/p&gt;
&lt;p&gt;但是使用 CDN 也会有一个非常大的缺点：只能对 &lt;strong&gt;静态资源&lt;/strong&gt; 做，因为 CDN 和反向代理有一个很大的不同就是：它会做缓存，并向各个节点分发。&lt;/p&gt;
&lt;p&gt;所以 CDN 一般都是用来给静态资源做加速的。如果你对动态页面做加速，用户看到的页面在一段时间内就一直不会变了。但是我们不怕！因为 Github Pages 本来就是全静态的！&lt;/p&gt;
&lt;p&gt;国内提供 CDN 服务的有：加速乐、七牛云存储、又拍云等。&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用 GitHub 和 Hexo 搭建个人独立博客</title>
      <link>https://zyf.im/2016/06/24/hexo-github-blog/</link>
      <pubDate>Fri, 24 Jun 2016 18:30:00 +0000</pubDate>
      <guid>https://zyf.im/2016/06/24/hexo-github-blog/</guid>
      <description>&lt;p&gt;&lt;code&gt;Wordpress&lt;/code&gt; 这类博客系统功能强大，可对与我只想划拉的写点东西的人，感觉大材小用了。而且 &lt;code&gt;Wordpress&lt;/code&gt; 需要部署，网站的服务器也会带来问题，国内的服务器首先需要备案，费用不低，国外服务器访问速度受影响。&lt;/p&gt;
&lt;p&gt;近来接触到一种新的博客系统 Hexo，它的不同地方就是将：&lt;strong&gt;在上线编写博客和页面渲染的过程在线下完成&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在本地编写博文的 Markdown 文件，使用 Hexo 将博客网站的所有前台 HTML 等全部生成，让后将生成的文件上传的服务器就行了。&lt;/p&gt;
&lt;p&gt;那么原来 wp 中的评论等动态功能怎么办呢？放心第三方服务商早已为我们考虑了。例如：&lt;a href=&#34;https://disqus.com/&#34;&gt;disqus&lt;/a&gt;就是一家第三方社会化评论系统，主要为网站主提供评论托管服务。&lt;/p&gt;
&lt;p&gt;本文的操作的系统环境是 Ubuntu 15，Windows 下的搭建可触类旁通。&lt;/p&gt;
&lt;h2 id=&#34;了解-hexo&#34;&gt;了解 Hexo&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;A fast, simple &amp;amp; powerful blog framework&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt; 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页，&lt;a href=&#34;https://hexo.io/zh-cn/docs/setup.html&#34;&gt;Hexo setup 官方文档&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
